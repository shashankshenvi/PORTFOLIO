package com.portfolio.controller;

import com.portfolio.service.UserDetailsService;
import com.portfolio.vo.UserDetails;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.UUID;

@CrossOrigin(origins = "http://localhost:5173")
@RestController
@RequestMapping("/api/users")
public class UserDetailsController {

    @Autowired
    private UserDetailsService userService;

    private static final String UPLOAD_DIR = "uploads/resumes/";

    @GetMapping
    public List<UserDetails> getAllUserDetails() {
        return userService.getAllUserDetails();
    }

    @PostMapping(consumes = {"multipart/form-data"})
    public ResponseEntity<UserDetails> createUser(
            @RequestPart("user") UserDetails user,
            @RequestPart(value = "resume", required = false) MultipartFile resumeFile) {

        if (resumeFile != null && !resumeFile.isEmpty()) {
            String filePath = saveResumeFile(resumeFile);
            user.setResumePath(filePath);
        }

        return new ResponseEntity<>(userService.createUser(user), HttpStatus.CREATED);
    }

    @GetMapping("{userId}")
    public ResponseEntity<UserDetails> getUserById(@PathVariable("userId") Integer userId) {
        return ResponseEntity.ok(userService.getUserById(userId));
    }

    @PutMapping(consumes = {"multipart/form-data"})
    public ResponseEntity<UserDetails> updateUser(
            @RequestPart("user") UserDetails user,
            @RequestPart(value = "resume", required = false) MultipartFile resumeFile) {

        if (resumeFile != null && !resumeFile.isEmpty()) {
            String filePath = saveResumeFile(resumeFile);
            user.setResumePath(filePath);
        }

        return new ResponseEntity<>(userService.updateUser(user), HttpStatus.CREATED);
    }

    @DeleteMapping
    public void deleteUser(@RequestBody UserDetails user) {
        userService.deleteUser(user);
    }

    private String saveResumeFile(MultipartFile file) {
        try {
            File uploadDir = new File(UPLOAD_DIR);
            if (!uploadDir.exists()) {
                uploadDir.mkdirs();
            }

            String uniqueFileName = UUID.randomUUID() + "_" + file.getOriginalFilename();
            File destinationFile = new File(UPLOAD_DIR + uniqueFileName);
            file.transferTo(destinationFile);

            return destinationFile.getAbsolutePath();
        } catch (IOException e) {
            throw new RuntimeException("Failed to save resume file", e);
        }
    }
}