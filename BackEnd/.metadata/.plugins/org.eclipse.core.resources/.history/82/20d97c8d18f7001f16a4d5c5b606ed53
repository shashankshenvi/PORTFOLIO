package com.portfolio.service;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.portfolio.exception.ResourceNotFoundException;
import com.portfolio.repository.MenuRepository;
import com.portfolio.repository.UserDetailsRepository;
import com.portfolio.vo.Menu;
import com.portfolio.vo.UserDetails;

@Service
public class UserDetailsServiceImpl {
	
	private static final Logger logger =LoggerFactory.getLogger(UserDetailsServiceImpl.class);
	
	@Autowired
	private UserDetailsRepository userDetailsRepository;
	
	@Override
	public List<UserDetails> getAllUserDetails(){
		return userDetailsRepository.findByIsActive('Y');
	}

	@Override
	public UserDetails createUser(UserDetails user) {
		return userDetailsRepository.save(user);
	}

	@Override
	public Menu getUserById(Integer userId) {
		
		UserDetails user = userDetailsRepository.findById(userId).orElseThrow(() -> new ResourceNotFoundException("User not found"));

		return user;
	}

	@Override
	public UserDetails updateUser(UserDetails user) {
		Menu updatedMenu = userDetailsRepository.save(menu);
		return updatedMenu;
	}

	@Override
	public void deleteUser(UserDetails user) {
		 menuRepository.findById(menu.getMenuId()).ifPresent(menuNew->{
			 menuNew.setIsActive('N');
			menuRepository.save(menuNew);
		});
	}
}
